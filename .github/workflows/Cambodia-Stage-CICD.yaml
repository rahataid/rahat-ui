name: Cambodia Stage CICD
on:
  push:
    branches:
      - 'stage'
  pull_request:
    branches:
      - 'stage'
  workflow_dispatch:

env:
  CI: false
  MANIFEST_FILE: 'K8s-Manifest/Rahat/Cambodia-Stage/Argo-Rollout/ui.yaml'

jobs:
  rahat-ui:
    name: rahat-ui
    runs-on: ubuntu-latest
    if: contains(github.event.head_commit.message, 'action') || contains(github.event.pull_request.title, 'action') || github.event_name == 'workflow_dispatch'

    steps:
      - uses: actions/checkout@v4

      - name: Get short SHA and short Run ID
        id: vars
        run: |
          echo "sha_short=$(git rev-parse --short HEAD)" >> $GITHUB_OUTPUT
          echo "run_id_short=${GITHUB_RUN_ID:0:3}" >> $GITHUB_OUTPUT

      - name: Import Secrets
        uses: hashicorp/vault-action@v2.4.0
        with:
          url: ${{ secrets.VAULT_URL }}
          token: ${{ secrets.VAULT_TOKEN }}
          secrets: |
            github/data/general/docker/esatya username | DOCKERHUB_USERNAME ;
            github/data/general/docker/esatya password | DOCKERHUB_TOKEN ;
            github/data/rahat/rahat-ui/stage/cambodia rahat-ui | ENV ;
      - name: create environment file
        run: |
          tee ./.env <<<"$ENV"      
      - uses: actions/setup-node@v3
        with:
          node-version: 20.10.0

      - name: Install pnpm
        run: |
          npm install -g pnpm@8.14.1

      - name: Install dependencies
        run: pnpm install

      - name: install dependencies and build apps
        run: |
          pnpm build:all

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: docker login
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      # Rahat-UI Image
      - name: build && push rahat-ui
        id: build-push-rahat-ui
        uses: docker/build-push-action@v5
        with:
          context: .
          file: Dockerfile.rahat-ui
          push: ${{ github.event_name == 'push' || github.event_name == 'workflow_dispatch' }}
          tags: |
            esatya/rahat-ui:cambodia-stage
            esatya/rahat-ui:cambodia-stage-${{ steps.vars.outputs.sha_short }}-${{ steps.vars.outputs.run_id_short }}

    outputs:
      sha_short: ${{ steps.vars.outputs.sha_short }}
      run_id_short: ${{ steps.vars.outputs.run_id_short }}

  update-manifest:
    name: Update Kubernetes Manifest
    needs: rahat-ui
    runs-on: ubuntu-latest
    if: github.event_name == 'push' || github.event_name == 'workflow_dispatch'
    steps:
      - name: Import Secrets
        uses: hashicorp/vault-action@v2.4.0
        with:
          url: ${{ secrets.VAULT_URL }}
          token: ${{ secrets.VAULT_TOKEN }}
          secrets: |
            github/data/general/Stage-Manifest repo | MANIFEST_REPO ;
            github/data/general/Stage-Manifest ssh-key | SSH_KEY ;

      # Checkout the manifest repository using SSH
      - name: Checkout Stage Manifest Repo
        uses: actions/checkout@v4
        with:
          repository: ${{ env.MANIFEST_REPO }}
          ssh-key: ${{ env.SSH_KEY }}

      # Update the image tag in the manifest
      - name: Update Image Tag in Manifest
        run: |
          sed -i "s|image: esatya/rahat-ui:.*|image: esatya/rahat-ui:cambodia-stage-${{ needs.rahat-ui.outputs.sha_short }}-${{ needs.rahat-ui.outputs.run_id_short }}|" ${{ env.MANIFEST_FILE }}

      # Commit and push changes using SSH
      - name: Commit and Push Changes
        run: |
          git config user.name "sandab-rumsan"
          git config user.email "sandab@rumsan.net"
          git add ${{ env.MANIFEST_FILE }}
          git commit -m "runner: Update Rahat Cambodia Stage UI image tag to cambodia-prod-replicate-${{ needs.rahat-ui.outputs.sha_short }}-${{ needs.rahat-ui.outputs.run_id_short }}"
          git push origin main